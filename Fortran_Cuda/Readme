This simple example shows how to call CUDA code from Fortran.
It squares the elements of a complex array, first in Fortran and
later in Cuda and prints the results.

./complex_mul 
 Results from Fortran
           1 (1.000000,2.000000) (-3.000000,4.000000)
           2 (2.000000,4.000000) (-12.00000,16.00000)
           3 (3.000000,6.000000) (-27.00000,36.00000)
           4 (4.000000,8.000000) (-48.00000,64.00000)
           5 (5.000000,10.00000) (-75.00000,100.0000)
           6 (6.000000,12.00000) (-108.0000,144.0000)
           7 (7.000000,14.00000) (-147.0000,196.0000)
           8 (8.000000,16.00000) (-192.0000,256.0000)
 Results from CUDA
           1 (1.000000,2.000000) (-3.000000,4.000000)
           2 (2.000000,4.000000) (-12.00000,16.00000)
           3 (3.000000,6.000000) (-27.00000,36.00000)
           4 (4.000000,8.000000) (-48.00000,64.00000)
           5 (5.000000,10.00000) (-75.00000,100.0000)
           6 (6.000000,12.00000) (-108.0000,144.0000)
           7 (7.000000,14.00000) (-147.0000,196.0000)
           8 (8.000000,16.00000) (-192.0000,256.0000)

Files:

	Makefile

	main.f90: Main Fortran program

	Cuda_function.cu: Cuda kernel and wrapping C function
